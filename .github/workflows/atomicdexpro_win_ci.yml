name: AtomicDEX Pro Win CI

on: [pull_request, push]

jobs:

  windows-build:
    name: Win Build
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install QT (Win)
        uses: jurplel/install-qt-action@v2
        with:
          version: '5.14.1'
          host: 'windows'
          target: 'desktop'
          dir: '${{ github.workspace }}'
          modules: 'qtcharts qtwidgets debug_info'

      - name: Build (Win)  # cmd /c 'ci_tools_atomic_dex.exe build release 2>&1' removed
        env:    # $Env:QT_INSTALL_CMAKE_PATH = "C:\Qt\5.14.2\msvc2017_64" -- example for pwsh
          QT_INSTALL_CMAKE_PATH: ${{ github.workspace }}\Qt\5.14.1\msvc2017_64
        shell: powershell
        run: |
          gdr
          ls ${{ github.workspace }}\Qt\5.14.1\msvc2017_64
          Set-ExecutionPolicy RemoteSigned -scope CurrentUser
          Invoke-Expression (New-Object System.Net.WebClient).DownloadString('https://get.scoop.sh')

          scoop install nim --global
          scoop install llvm --global
          scoop install ninja --global
          scoop install cmake --global
          scoop install git --global
          gdr

          # clear scoop cache
          scoop cache rm 7zip
          scoop cache rm git
          scoop cache rm cmake
          scoop cache rm ninja
          scoop cache rm llvm
          scoop cache rm nim
          gdr

          cd ci_tools_atomic_dex
          $file = 'src\generate.nim'
          $regex = '(?<=g_vcpkg_cmake_script_path & ")[^"]*'
          (Get-Content $file) -replace $regex, ' -DVCPKG_TARGET_TRIPLET=x64-windows ' | Set-Content $file
          nimble.exe build -y
          gdr

          & cmd /c 'git clone https://github.com/KomodoPlatform/vcpkg vcpkg-repo 2>&1'
          cd vcpkg-repo
          .\bootstrap-vcpkg.bat
          .\vcpkg.exe integrate install
          .\vcpkg.exe install entt
          rd -r ".\buildtrees\"
          rd -r ".\downloads\"
          .\vcpkg.exe install folly
          rd -r ".\buildtrees\"
          rd -r ".\downloads\"
          .\vcpkg.exe install boost-multiprecision
          rd -r ".\buildtrees\"
          rd -r ".\downloads\"
          .\vcpkg.exe install boost-random
          rd -r ".\buildtrees\"
          rd -r ".\downloads\"
          .\vcpkg.exe install doctest
          rd -r ".\buildtrees\"
          rd -r ".\downloads\"
          .\vcpkg.exe install fmt
          rd -r ".\buildtrees\"
          rd -r ".\downloads\"
          .\vcpkg.exe install curl
          rd -r ".\buildtrees\"
          rd -r ".\downloads\"
          .\vcpkg.exe install nlohmann-json
          rd -r ".\buildtrees\"
          rd -r ".\downloads\"
          .\vcpkg.exe install range-v3
          rd -r ".\buildtrees\"
          rd -r ".\downloads\"
          .\vcpkg.exe install libsodium
          rd -r ".\buildtrees\"
          rd -r ".\downloads\"
          .\vcpkg.exe install date
          rd -r ".\buildtrees\"
          rd -r ".\downloads\"
          .\vcpkg.exe install threads
          rd -r ".\buildtrees\"
          rd -r ".\downloads\"
          .\vcpkg.exe install zlib
          rd -r ".\buildtrees\"
          rd -r ".\downloads\"
          .\vcpkg.exe install gtest
          rd -r ".\buildtrees\"
          rd -r ".\downloads\"
          .\vcpkg.exe install jsoncpp
          rd -r ".\buildtrees\"
          rd -r ".\downloads\"
          gdr

          cmd /c 'ci_tools_atomic_dex.exe build debug 2>&1'
          gdr
          cmd /c 'ci_tools_atomic_dex.exe bundle debug 2>&1'
          gdr

      - name: Upload artifacts (Windows)
        uses: actions/upload-artifact@v1
        with:
          name: dexpro-win-debug.zip
          path: ./ci_tools_atomic_dex/bundle-Debug/bundle.zip
